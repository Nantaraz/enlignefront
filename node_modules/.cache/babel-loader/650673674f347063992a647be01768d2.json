{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/mety/enlignefront/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport classnames from 'classnames';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(user);\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/admin');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return (//             <form onSubmit={ this.handleSubmit }>\n      //                 <div class=\"container\" id=\"login\">\n      //     <div class=\"card card-login mx-auto text-center bg-dark\">\n      //         {/* <div class=\"card-header mx-auto bg-dark\">\n      //             <span> <img src=\"https://amar.vote/assets/img/amarVotebd.png\" class=\"w-75\" alt=\"Logo\"/> </span><br/>\n      //                         <span class=\"logo_title mt-5\"> Login Dashboard </span>\n      //         </div> */}\n      //         <div class=\"card-body\">\n      //             <form action=\"\" method=\"post\">\n      //                 <div class=\"input-group form-group\">\n      //                     <div class=\"input-group-prepend\">\n      //                         <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n      //                     </div>\n      //                     <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} className={classnames('form-control form-control-lg', {\n      //                         'is-invalid': errors.email\n      //                     })} placeholder=\"E-mail\"/>{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n      //                 </div>\n      //                 <div class=\"input-group form-group\">\n      //                     <div class=\"input-group-prepend\">\n      //                         <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n      //                     </div>\n      //                     <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} className={classnames('form-control form-control-lg', {\n      //                         'is-invalid': errors.password\n      //                     })}  placeholder=\"Password\"/> {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n      //                 </div>\n      //                 <div class=\"form-group\">\n      //                     <input type=\"submit\" name=\"btn\" value=\"Login\" class=\"btn btn-outline-danger float-right login_btn\"/>\n      //                 </div>\n      //             </form>\n      //         </div>\n      //     </div>\n      // </div>\n      //             </form>\n      React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"h5 text-center mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Type your email\",\n        icon: \"envelope\",\n        group: true,\n        type: \"email\",\n        validate: true,\n        error: \"wrong\",\n        success: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"Type your password\",\n        icon: \"lock\",\n        group: true,\n        type: \"password\",\n        validate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Login\"))))))\n    );\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/home/dev/Bureau/mety/enlignefront/src/components/Login.js"],"names":["React","Component","PropTypes","connect","loginUser","classnames","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","Login","constructor","state","email","password","errors","handleInputChange","bind","handleSubmit","e","setState","target","name","value","preventDefault","user","props","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport classnames from 'classnames';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/admin')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    render() {\n        const {errors} = this.state;\n        return(\n//             <form onSubmit={ this.handleSubmit }>\n//                 <div class=\"container\" id=\"login\">\n//     <div class=\"card card-login mx-auto text-center bg-dark\">\n//         {/* <div class=\"card-header mx-auto bg-dark\">\n//             <span> <img src=\"https://amar.vote/assets/img/amarVotebd.png\" class=\"w-75\" alt=\"Logo\"/> </span><br/>\n//                         <span class=\"logo_title mt-5\"> Login Dashboard </span>\n\n//         </div> */}\n//         <div class=\"card-body\">\n//             <form action=\"\" method=\"post\">\n//                 <div class=\"input-group form-group\">\n//                     <div class=\"input-group-prepend\">\n//                         <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n//                     </div>\n//                     <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleInputChange} className={classnames('form-control form-control-lg', {\n//                         'is-invalid': errors.email\n//                     })} placeholder=\"E-mail\"/>{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n//                 </div>\n\n//                 <div class=\"input-group form-group\">\n//                     <div class=\"input-group-prepend\">\n//                         <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n//                     </div>\n//                     <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} className={classnames('form-control form-control-lg', {\n//                         'is-invalid': errors.password\n//                     })}  placeholder=\"Password\"/> {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n//                 </div>\n\n//                 <div class=\"form-group\">\n//                     <input type=\"submit\" name=\"btn\" value=\"Login\" class=\"btn btn-outline-danger float-right login_btn\"/>\n//                 </div>\n\n//             </form>\n//         </div>\n//     </div>\n// </div>\n\n//             </form>\n<MDBContainer>\n<MDBRow>\n  <MDBCol md=\"6\">\n    <form>\n      <p className=\"h5 text-center mb-4\">Sign in</p>\n      <div className=\"grey-text\">\n        <MDBInput\n          label=\"Type your email\"\n          icon=\"envelope\"\n          group\n          type=\"email\"\n          validate\n          error=\"wrong\"\n          success=\"right\"\n        />\n        <MDBInput\n          label=\"Type your password\"\n          icon=\"lock\"\n          group\n          type=\"password\"\n          validate\n        />\n      </div>\n      <div className=\"text-center\">\n        <MDBBtn>Login</MDBBtn>\n      </div>\n    </form>\n  </MDBCol>\n</MDBRow>\n</MDBContainer>\n            \n       \n        )\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)"]},"metadata":{},"sourceType":"module"}