{"ast":null,"code":"var _jsxFileName = \"/home/nata/Desktop/enlignefront/src/components/Register.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nom: '',\n      prenom: '',\n      email: '',\n      specialite: '',\n      password: '',\n      password_confirm: '',\n      errors: {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const user = {\n      nom: this.state.nom,\n      prenom: this.state.prenom,\n      email: this.state.email,\n      specialite: this.state.specialite,\n      password: this.state.password,\n      password_confirm: this.state.password_confirm\n    };\n    this.props.registerUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: '50px',\n        width: '700px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        marginBottom: '40px',\n        marginLeft: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Cr\\xE9ation du compte\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputregister\",\n      type: \"text\",\n      placeholder: \"Nom\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.nom\n      }),\n      name: \"nom\",\n      onChange: this.handleInputChange,\n      value: this.state.nom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), errors.nom && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, errors.nom)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputregister\",\n      type: \"text\",\n      placeholder: \"Prenom\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.prenom\n      }),\n      name: \"prenom\",\n      onChange: this.handleInputChange,\n      value: this.state.prenom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), errors.prenom && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, errors.prenom)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputregister\",\n      type: \"email\",\n      placeholder: \"Email\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.email\n      }),\n      name: \"email\",\n      onChange: this.handleInputChange,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), errors.email && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, errors.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputregister\",\n      type: \"text\",\n      placeholder: \"Sp\\xE9cialit\\xE9\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.specialite\n      }),\n      name: \"specialite\",\n      onChange: this.handleInputChange,\n      value: this.state.specialite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), errors.specialite && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, errors.specialite)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputregister\",\n      type: \"password\",\n      placeholder: \"Password\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.password\n      }),\n      name: \"password\",\n      onChange: this.handleInputChange,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), errors.password && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputregister\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': errors.password_confirm\n      }),\n      name: \"password_confirm\",\n      onChange: this.handleInputChange,\n      value: this.state.password_confirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), errors.password_confirm && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, errors.password_confirm)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      id: \"butregister\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"S'inscrire\"))));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/home/nata/Desktop/enlignefront/src/components/Register.js"],"names":["React","Component","connect","PropTypes","withRouter","registerUser","classnames","Register","constructor","state","nom","prenom","email","specialite","password","password_confirm","errors","handleInputChange","bind","handleSubmit","e","setState","target","name","value","preventDefault","user","props","history","componentWillReceiveProps","nextProps","auth","isAuthenticated","push","componentDidMount","render","marginTop","width","marginBottom","marginLeft","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nom: '',\n            prenom: '',\n            email: '',\n            specialite: '',\n            password: '',\n            password_confirm: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            nom: this.state.nom,\n            prenom: this.state.prenom,\n            email: this.state.email,\n            specialite: this.state.specialite,\n            password: this.state.password,\n            password_confirm: this.state.password_confirm\n        }\n        this.props.registerUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        const { errors } = this.state;\n        return(\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n            <h1 style={{marginBottom: '40px',marginLeft:'70px'}}>Création du compte</h1>\n            <form onSubmit={ this.handleSubmit }>\n                <div className=\"form-group\">\n                    <input\n                    id=\"inputregister\"\n                    type=\"text\"\n                    placeholder=\"Nom\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.nom\n                    })}\n                    name=\"nom\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.nom }\n                    />\n                    {errors.nom && (<div className=\"invalid-feedback\">{errors.nom}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    id=\"inputregister\"\n                    type=\"text\"\n                    placeholder=\"Prenom\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.prenom\n                    })}\n                    name=\"prenom\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.prenom }\n                    />\n                    {errors.prenom && (<div className=\"invalid-feedback\">{errors.prenom}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    id=\"inputregister\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.email\n                    })}\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email }\n                    />\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    id=\"inputregister\"\n                    type=\"text\"\n                    placeholder=\"Spécialité\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.specialite\n                    })}\n                    name=\"specialite\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.specialite }\n                    />\n                    {errors.specialite && (<div className=\"invalid-feedback\">{errors.specialite}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    id=\"inputregister\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password\n                    })}\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    id=\"inputregister\"\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password_confirm\n                    })}\n                    name=\"password_confirm\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password_confirm }\n                    />\n                    {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\" id=\"butregister\">\n                        S'inscrire\n                    </button>\n                </div>\n            </form>\n        </div>\n\n        \n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register))"]},"metadata":{},"sourceType":"module"}