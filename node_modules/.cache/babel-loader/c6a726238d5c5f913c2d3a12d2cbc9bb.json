{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\nexport const inscrireUser = (user, history) => dispatch => {\n  axios.post('http://localhost:8080/register', user).then(res => history.push('/inscrire')).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const registerUser = (user, history) => dispatch => {\n  axios.post('http://localhost:8090/register', user).then(res => history.push('/login')).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const loginUser = user => dispatch => {\n  axios.post('http://localhost:8090/login', user).then(res => {\n    const token = res.data.token; // console.log('id:', res.data);\n\n    localStorage.setItem('jwtToken', token);\n    localStorage.setItem('id', res.data.id);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const logoutUser = history => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  history.push('/login');\n};","map":{"version":3,"sources":["/home/dev/Bureau/projetCuisinier/front/src/actions/authentication.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","setAuthToken","jwt_decode","inscrireUser","user","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","registerUser","loginUser","token","localStorage","setItem","id","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAMC,OAAN,KAAkBC,QAAQ,IAAI;AACtDR,EAAAA,KAAK,CAACS,IAAN,CAAW,gCAAX,EAA6CH,IAA7C,EACCI,IADD,CACMC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,WAAb,CADb,EAECC,KAFD,CAEOC,GAAG,IAAI;AACVN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEd,UADD;AAELe,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,YAAY,GAAG,CAACb,IAAD,EAAOC,OAAP,KAAmBC,QAAQ,IAAI;AACvDR,EAAAA,KAAK,CAACS,IAAN,CAAW,gCAAX,EAA6CH,IAA7C,EACSI,IADT,CACcC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CADrB,EAESC,KAFT,CAEeC,GAAG,IAAI;AACVN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEd,UADD;AAELe,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH,GAPT;AAQH,CATM;AAWP,OAAO,MAAME,SAAS,GAAId,IAAD,IAAUE,QAAQ,IAAI;AAC3CR,EAAAA,KAAK,CAACS,IAAN,CAAW,6BAAX,EAA0CH,IAA1C,EACSI,IADT,CACcC,GAAG,IAAI;AAAA,UACDU,KADC,GACSV,GAAG,CAACO,IADb,CACDG,KADC,EAET;;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BZ,GAAG,CAACO,IAAJ,CAASM,EAApC;AACArB,IAAAA,YAAY,CAACkB,KAAD,CAAZ;AACA,UAAMI,OAAO,GAAGrB,UAAU,CAACiB,KAAD,CAA1B;AACAb,IAAAA,QAAQ,CAACkB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,GAVT,EAWSZ,KAXT,CAWeC,GAAG,IAAI;AACVN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEd,UADD;AAELe,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,KAAD,CAAR;AAIH,GAhBT;AAiBH,CAlBM;AAoBP,OAAO,MAAMQ,cAAc,GAAGD,OAAO,IAAI;AACrC,SAAO;AACHV,IAAAA,IAAI,EAAEb,gBADH;AAEHc,IAAAA,OAAO,EAAES;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAIpB,OAAD,IAAaC,QAAQ,IAAI;AAC/Cc,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACAzB,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,EAAAA,QAAQ,CAACkB,cAAc,CAAC,EAAD,CAAf,CAAR;AACAnB,EAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACH,CALM","sourcesContent":["import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const inscrireUser = (user,history) => dispatch => {\n    axios.post('http://localhost:8080/register', user)\n    .then(res => history.push('/inscrire'))\n    .catch(err => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    });\n}\n\nexport const registerUser = (user, history) => dispatch => {\n    axios.post('http://localhost:8090/register', user)\n            .then(res => history.push('/login'))\n            .catch(err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const loginUser = (user) => dispatch => {\n    axios.post('http://localhost:8090/login', user)\n            .then(res => {\n                const { token } = res.data;\n                // console.log('id:', res.data);\n                \n                localStorage.setItem('jwtToken', token);\n                localStorage.setItem('id', res.data.id);\n                setAuthToken(token);\n                const decoded = jwt_decode(token);\n                dispatch(setCurrentUser(decoded));\n            })\n            .catch(err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}"]},"metadata":{},"sourceType":"module"}